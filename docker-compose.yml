version: "3.7"
services:
  x-backend: &backend
    build:
      context: .
      dockerfile: Dockerfile
      target: base
      args:
        RUBY_VERSION: "3.4.4"
        PG_MAJOR: "17"
    environment: &backend_environment
      RAILS_ENV: ${RAILS_ENV:-development}
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
      DB_HOST: db
      RAILS_MAX_THREADS: 5
      MAILER_ADDRESS: "maildev"
      MAILER_PORT: 1025
      REDIS_URL: redis://redis:6379/1
      ANYCABLE_CABLE_URL: ws://localhost:8080/cable
      ANYCABLE_SECRET: anycable_key
      CHROME_URL: ${CHROME_URL:-http://chrome:3333}
      # ----
      # Dev tools
      # ----
      HISTFILE: /usr/local/hist/.bash_history
      IRB_HISTFILE: /usr/local/hist/.irb_history
      PSQL_HISTFILE: /usr/local/hist/.psql_history
      EDITOR: vi
    volumes:
      - .:/pro-rails
      - pro-rails-cache:/pro-rails/tmp/cache
      - pro-rails-bundle:/usr/local/bundle
      - pro-rails-builds:/pro-rails/app/assets/builds
      - pro-rails-assets:/app/public/assets
      - pro-rails-storage:/pro-rails/storage
      - pro-rails-history:/usr/local/hist
    tmpfs:
      - /tmp:exec
      - /app/tmp/pids
    depends_on: &backend_depends_on
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      ws:
        condition: service_started

  db:
    image: "postgres:17.5-alpine3.22"
    volumes:
      - pro-rails-postgres-db:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
      PSQL_HISTFILE: /root/log/.psql_history
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  rails:
    <<: *backend
    command: /bin/bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    environment:
      <<: *backend_environment
    ports:
      - 3000:3000
    depends_on:
      <<: *backend_depends_on
      maildev:
        condition: service_started

  redis:
    image: redis:8.2.0-alpine3.22
    volumes:
      - pro-rails-redis:/data
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  test_system:
    <<: *backend
    command: rspec spec/system
    ports:
      - "3001:3001"
      - "50051"
    environment:
      <<: *backend_environment
      RAILS_ENV: test
      APP_HOST: ${APP_HOST:-anycable.test}
      ANYCABLE_RPC_HOST: 0.0.0.0:50051
      ANYCABLE_HTTP_BROADCAST_URL: http://ws.anycable.test:8090/_broadcast
      ANYCABLE_WEBSOCKET_URL: ${ANYCABLE_WEBSOCKET_URL:-ws://ws.anycable.test:8081/cable}
    depends_on:
      <<: *backend_depends_on
      chrome:
        condition: service_started
      ws_test:
        condition: service_started
    networks:
      default:
        aliases:
          - anycable.test

  ws: &ws
    image: anycable/anycable-go:1.6.3-alpine
    ports:
      - "8080:8080"
      - "8090:8090"
    environment: &ws_environment
      ANYCABLE_HOST: "0.0.0.0"
      ANYCABLE_PORT: 8080
      ANYCABLE_REDIS_URL: redis://redis:6379/0
      ANYCABLE_RPC_HOST: anycable:50051
      ANYCABLE_DEBUG: true
      ANYCABLE_TURBO_STREAMS: true
      ANYCABLE_SECRET: anycable_key
      ANYCABLE_JWT_ID_KEY: anycable_key
      ANYCABLE_BROADCAST_ADAPTER: "redis"
      ANYCABLE_BROKER: "memory"
      ANYCABLE_REDIS_CHANNEL: __anycable__
    depends_on:
      redis:
        condition: service_healthy

  ws_test:
    <<: *ws
    ports:
      - "8081:8081"
    environment:
      <<: *ws_environment
      ANYCABLE_PORT: "8081"
      # Disable broker to avoid race conditions when
      # we load history since from previous examples
      ANYCABLE_BROKER: ""
      ANYCABLE_RPC_HOST: anycable.test:50051
    networks:
      default:
        aliases:
          - ws.anycable.test

  maildev:
    image: maildev/maildev
    restart: always
    environment:
      MAILDEV_SMTP_PORT: 1025
      MAILDEV_WEB_PORT: 8025
      MAILDEV_MAIL_DIRECTORY: /home/node/data
    volumes:
      - pro-rails-mc-data:/home/node
    ports:
      - "1025:1025"
      - "8025:8025"

  chrome:
    # Currently, Apple M1 is only supported in unnumbered "latest" versions.
    # See https://github.com/browserless/chrome/issues/1393
    image: browserless/chrome:latest
    ports:
      - "3333:3333"
    volumes:
      - .:/rails-app
    environment:
      PORT: 3333
      # Set connection timeout for debugging
      # https://docs.browserless.io/docs/docker.html#connection-timeout
      CONNECTION_TIMEOUT: 600000
      # Add these for better stability
      MAX_CONCURRENT_SESSIONS: 1
      QUEUE_LENGTH: 2
      PREBOOT_CHROME: "true"
      KEEP_ALIVE: "true"

volumes:
  pro-rails-postgres-db:
  pro-rails-bundle:
  pro-rails-cache:
  pro-rails-builds:
  pro-rails-assets:
  pro-rails-storage:
  pro-rails-history:
  pro-rails-mc-data:
  pro-rails-redis:
